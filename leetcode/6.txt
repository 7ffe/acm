//too many minor errors, may try again later
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int c = 0;
        ListNode* head = NULL;
        ListNode* p;
        
        while (l1!=NULL && l2!=NULL){
            int n = l1->val + l2->val + c;
            c = n/10;
            n = n%10;
            if (head==NULL){
                p = new ListNode(n);
                head = p;
            }else{
                p->next = new ListNode(n);
                p = p->next;
            }
            l1 = l1->next;
            l2 = l2->next;
        }
        while (l1!=NULL){
            p->next = new ListNode((l1->val + c)%10);
            c = (l1->val + c)/10;
            l1 = l1->next;
            p = p->next;
            
        }
        while (l2!=NULL){
            p->next = new ListNode((l2->val + c)%10);
            c = (l2->val + c)/10;
            l2 = l2->next;
            p = p->next;
        }
        while (p->next !=NULL)
            p = p->next;
        if (c>0){
            p->next = new ListNode(c);
        }
        return head;
    }
};
